package module6;

import java.util.List;

import de.fhpotsdam.unfolding.data.Feature;
import de.fhpotsdam.unfolding.data.PointFeature;
import de.fhpotsdam.unfolding.marker.SimpleLinesMarker;
import processing.core.PConstants;
import processing.core.PGraphics;

/** 
 * A class to represent AirportMarkers on a world map.
 *   
 * @author Adam Setters and the UC San Diego Intermediate Software Development
 * MOOC team
 *
 */
public class AirportMarker extends CommonMarker {
	public static final float ALTITUDE_LOW = 500;
	public static final float ALTITUDE_MODERATE = 1000;
	public static final float ALTITUDE_HIGH = 1500;
	

	public static List<SimpleLinesMarker> routes;
	
	public AirportMarker(Feature city) {
		super(((PointFeature)city).getLocation(), city.getProperties());
	
	}
	
	@Override
	public void drawMarker(PGraphics pg, float x, float y) {
		
		colorDetermine(pg);
		pg.ellipse(x, y, 5, 5);			
	}

	private void colorDetermine(PGraphics pg) {
		Float altitude = getAltitude();
		if(altitude <= ALTITUDE_LOW) {
			pg.fill(0, 0 , 255);
		} else if(altitude >= ALTITUDE_LOW && altitude <= ALTITUDE_MODERATE) {
			pg.fill(0, 255, 0);
		} else if(altitude >=  ALTITUDE_HIGH ) {
			pg.fill(255,0 ,0);			
		}

		
	}

	@Override
	public void showTitle(PGraphics pg, float x, float y) {
		 // show rectangle with title
		String airportName = getName() + ", " + getCity() + ", " + getCountry();
		pg.pushStyle();
//		pg.rectMode(CORNER);
		pg.fill(255,255,255);
		pg.rect(x, y + 15, pg.textWidth(airportName) +6, 18, 5);
		
		pg.textAlign(PConstants.LEFT, PConstants.TOP);
		pg.fill(0);
		pg.text(airportName, x + 3 , y +18);
				
		pg.popStyle();
		
		// show routes			
	}
	
	private String getCountry(){
		return getStringProperty("country");
	}
	private String getName(){
		return getStringProperty("name");
	}
	private String getCity(){
		return getStringProperty("city");
	}
	private float getAltitude(){
		return Float.parseFloat(getStringProperty("altitude").toString());
	}
	
	//for 
	
}
